openapi: "3.0.2"
info:
  title: "ClairV4"
  description: "ClairV4 is a set of cooperating microservice which scan, index, and match your container's content with known vulnerabilities."
  version: "0.1"
  termsOfService: ""
  contact:
    name: "Clair Team"
    url: "http://github.com/quay/clair"
    email: "quay-devel@redhat.com"
  license:
    name: "Apache License 2.0"
    url:  "http://www.apache.org/licenses/"

paths:
  /index:
    post:
      tags:
      - Indexer
      operationId: "Index"
      summary: "Index the contents of a Manifest"
      description: "By submitting a Manifest object to this endpoint Clair will fetch the layers, scan each layer's contents, and provide an index of discovered packages, repository and distribution information"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Manifest'
      responses:
        201:
          description: IndexReport Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexReport'
        400:
          $ref: '#/components/responses/BadRequest'
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        500:
          $ref: '#/components/responses/InternalServerError'
  
  /index_report/{manifest_hash}:
    get:
      tags:
      - Indexer
      operationId: "GetIndexReport"
      summary: "Retrieve an IndexReport for the given Manifest hash if exists."
      description: "Given a Manifest's content addressable hash an IndexReport will be retrieved if exists."
      parameters:
      - name: manifest_hash
        in: path
        description: "A content addressable hash which has been indexed previous to this request"
        required: true
        schema:
          type: string
      responses:
        200:
          description: IndexReport retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IndexReport'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        500:
          $ref: '#/components/responses/InternalServerError'

  /vulnerability_report/{manifest_hash}:
    get:
      tags:
      - Matcher
      operationId: "GetVulnerabilityReport"
      summary: "Retrieve a VulnerabilityReport for a given manifest's content addressable hash"
      description: "Given a Manifest's content addressable hash a VulnerabilityReport will be created. The Manifest **must** have been Indexed first via the Index endpoint"
      parameters:
      - name: manifest_hash
        in: path
        description: "A content addressable hash which has been indexed previous to this request"
        required: true
        schema:
          type: string
      responses:
        201:
          description: VulnerabilityReport Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VulnerabilityReport'
        400:
          $ref: '#/components/responses/BadRequest'
        404:
          $ref: '#/components/responses/NotFound'
        405:
          $ref: '#/components/responses/MethodNotAllowed'
        500:
          $ref: '#/components/responses/InternalServerError'
  '/state':
    get:
      tags:
        - Indexer
      operationId: State
      summary: Report the indexer's internal configuration and state.
      description: |
        The state endpoint returns an opaque string indicating the indexer's
        internal configuration and state.
        
        A client may be interested in this as a signal that manifests may need
        to be reindexed.
      responses:
        200:
          description: Indexer State
          headers:
            Etag:
              description: 'Entity Tag'
              schema: {type: string}
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/State'
        304:
          description: Indexer State Unchanged

components:
  responses:
    BadRequest:
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

    MethodNotAllowed:
        description: Method Not Allowed
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

    InternalServerError:
        description: Internal Server Error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

    NotFound:
        description: Not Found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Error'

  examples:
    Details:
      value:
        affected_package: 
          id: 16
          name: "perl-base"
          version: "5.26.1-6ubuntu0.3"
          kind: "binary"
          source: 
            id: 15
            name: perl
            version: 5.26.1-6ubuntu0.3
            kind: source
            source: null
            package_db: 
            repository_hint: 
          package_db: var/lib/dpkg/status
          repository_hint: f17ad9208249962b7a52349494ce75ff
        introduced_in: 35c102085707f703de2d9eaad8752d6fe1b8f02b5d2149f1d8357c9cc7fb7d0a
        fixed_in_version: 5.26.2-7ubuntu0.1

    Vulnerability:
      value:
        id: 356835
        updater: ""
        name: "CVE-2009-5155"
        description: "In the GNU C Library (aka glibc or libc6) before 2.28, parse_reg_exp in posix/regcomp.c misparses alternatives, which allows attackers to cause a denial of service (assertion failure and application exit) or trigger an incorrect result by attempting a regular-expression match."
        links: "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2009-5155 http://people.canonical.com/~ubuntu-security/cve/2009/CVE-2009-5155.html https://sourceware.org/bugzilla/show_bug.cgi?id=11053 https://debbugs.gnu.org/cgi/bugreport.cgi?bug=22793 https://debbugs.gnu.org/cgi/bugreport.cgi?bug=32806 https://debbugs.gnu.org/cgi/bugreport.cgi?bug=34238 https://sourceware.org/bugzilla/show_bug.cgi?id=18986"
        severity: "Low"
        package: 
          id: 0
          name: "glibc"
          version: ""
          kind: ""
          source: null
          package_db: ""
          repository_hint: ""
        dist: 
          id: 0
          did: "ubuntu"
          name: "Ubuntu"
          version: "18.04.3 LTS (Bionic Beaver)"
          version_code_name: "bionic"
          version_id: "18.04"
          arch: ""
          cpe: ""
          pretty_name: ""
        repo: 
          id: 0
          name: "Ubuntu 18.04.3 LTS"
          key: ""
          uri: ""
        fixed_in_version: "2.28-0ubuntu1"

    Distribution:
      value:
        id: 1
        did: "ubuntu"
        name: "Ubuntu"
        version: "18.04.3 LTS (Bionic Beaver)"
        version_code_name: "bionic"
        version_id: "18.04"
        arch: ""
        cpe: ""
        pretty_name: "Ubuntu 18.04.3 LTS"

    IndexedPackage:
      value:
        id: 10
        name: "libapt-pkg5.0"
        version: "1.6.11"
        kind: "binary"
        source:
          id: 9
          name: "apt"
          version: "1.6.11"
          kind: "source"
          source: null
          package_db: ""
          repository_hint: ""
        package_db: "var/lib/dpkg/status"
        repository_hint: "b0e3976b91845036e35cbfb01ec6d6eb"

    Package:
      value:
        id: 10,
        name: "libapt-pkg5.0"
        version: "1.6.11"
        kind: "binary"
        source:
          id: 9
          name: "apt"
          version: "1.6.11"
          kind: "source"
          source: null
          package_db: ""
          repository_hint: ""

    RemotePath:
      value:
        uri: "https://storage/35c102085707f703de2d9eaad8752d6fe1b8f02b5d2149f1d8357c9cc7fb7d0a"
        headers:
          Authorization:
            - xyz
          X-Header:
            - some-value

  schemas:
    IndexReport:
      title: IndexReport
      type: object
      description: "A report of the Index process for a particular manifest. A client's usage of this is largely information. Clair uses this report for matching Vulnerabilities"
      properties:
        manifest_hash:
          description: "A content addressable hash uniqually identifying the indexed manifest"
          type: string
          example: "2f077db56abccc19f16f140f629ae98e904b4b7d563957a7fc319bd11b82ba36"
        state:
          description: "The current state of the index operation"
          type: string
          example: "IndexFinished"
        packages:
          type: object
          description: "A map of IndexedPackage objects key'd by Package.id found in the Manifest"
          example:
            10:
              $ref: '#/components/examples/IndexedPackage/value'
          additionalProperties:
            $ref: '#/components/schemas/IndexedPackage'
        distributions:
          type: object
          description: "A map of Distribution objects key'd by their Distribution.id discovered in the manifest"
          example:
            1: 
              $ref: '#/components/examples/Distribution/value'
          additionalProperties:
            $ref: '#/components/schemas/Distribution'
        distributions_by_package:
          type: object
          description: "A map of Distribution.id key'd by Package.id. Exists to programatically link a package with it's distribution context"
          example: 
            10: 1
            11: 1
            12: 1
          additionalProperties:
            type: integer
        package_introduced:
          type: object
          description: "A map of layer hashes key'd by Package.id. Exists to programatically identify in which layer a package was introduced"
          example:
            10: "35c102085707f703de2d9eaad8752d6fe1b8f02b5d2149f1d8357c9cc7fb7d0a"
            100: "35c102085707f703de2d9eaad8752d6fe1b8f02b5d2149f1d8357c9cc7fb7d0a"
          additionalProperties:
            type: string

    VulnerabilityReport:
      title: VulnerabilityReport
      type: object
      description: "A list of vulnerabilities affecting a particular manifest."
      properties:
        manifest_hash:
          description: "The content addressable manifest hash this VulnerabilityReport is associated with."
          type: string
        vulnerabilities:
          description: "A map of Vulnerabilities key'd by their Vulnerability.id"
          type: object
          example:
            356835: 
              $ref: '#/components/examples/Vulnerability/value'
          additionalProperties:
            $ref: '#/components/schemas/Vulnerability'
        details:
          description: "A map of an array of Details objects key'd by Vulnerability.id. Creates a one to many relationshp expressing found vulnerability to affected package details"
          type: object
          example:
            356835:
              - $ref: '#/components/examples/Details/value'
          additionalProperties:
            type: array
            items:
              $ref: '#/components/schemas/Details'

    Details:
      title: Details
      type: object
      example:
        $ref: '#/components/examples/Details/value'
      properties:
        affected_package:
          $ref: '#/components/schemas/Package'
        introduced_in:
          description: "The layer's content addressable hash in which this package was first introduced"
          type: string
        fixed_in_version:
          description: "The version in which the package is no longer affected by this vulnerability"
          type: string

    Vulnerability:
      title: Vulnerability
      type: object
      description: "A unique vulnerability indexed by Clair"
      example:
        $ref: '#/components/examples/Vulnerability/value'
      properties:
        id:
          description: "A unique ID representing this vulnerability."
          type: integer
        updater:
          description: "A unique ID representing this vulnerability."
          type: integer
        name:
          description: "Name of this specific vulnerability."
          type: string
        description:
          description: "A description of this specific vulnerability."
          type: string
        links:
          description: "A space separate list of links to any external information."
          type: string
        severity:
          description: "A severity keyword taken verbatim from the vulnerability source."
          type: string
        package:
          $ref: '#/components/schemas/Package'
        dist:
          $ref: '#/components/schemas/Distribution'
        repo:
          type: object
        fixed_in_version:
          description: "A unique ID representing this vulnerability."
          type: integer
            
    Distribution:
      title: Distribution
      type: object
      description: "An indexed distribution discovered in a layer. See https://www.freedesktop.org/software/systemd/man/os-release.html for explanations and example of fields."
      example:
        $ref: '#/components/examples/Distribution/value'
      properties:
        id: 
          description: "A unique ID representing this distribution"
          type: integer
        did:
          type: string
        name:
          type: string
        version:
          type: string
        version_code_name:
          type: string
        version_id:
          type: string
        arch:
          type: string
        cpe:
          type: string
        pretty_name:
          type: string
    
    IndexedPackage:
      title: IndexedPackage
      type: object
      description: "An indexed package found in a layer"
      example:
        $ref: '#/components/examples/IndexedPackage/value'
      properties:
        package:
          $ref: '#/components/schemas/Package'
        package_db:
          description: "The package database on the filesystem this package was found"
          type: string
        repository_hint:
          description: "A hint to help match a package with the repository it came from"
          type: string
    
    Package:
      title: Package
      type: object
      description: "A package discovered by indexing a Manifest"
      example: 
        $ref: '#/components/examples/Package/value'
      properties:
        id:
          description: "A unique ID representing this package"
          type: integer
        name:
          description: "Name of the Package"
          type: string
        version:
          description: "Version of the Package"
          type: string
        kind:
          description: "Kind of package. Source | Binary"
          type: string
        source:
          $ref: '#/components/schemas/Package'
        
    Manifest:
      title: Manifest
      type: object
      description: "A Manifest representing a container. The 'layers' array must preserve the original container's layer order for accurate usage"
      properties:
        hash:
          description: "A content addressable hash uniqually identifying this manifest."
          type: string
          example: "251f5509d51d9e4119d4ffb70d4820f8e2d7dc72ad15df3ebd7cd755539e40fd"
        layers:
          type: array
          items:
            $ref: '#/components/schemas/Layer'
  
    Layer:
      title: Layer
      type: object
      description: "A Layer within a Manifest and where Clair may retrieve it."
      properties:
        hash:
          type: string
          description: "A content addressable hash uniqually identifying this layer"
          example: "2f077db56abccc19f16f140f629ae98e904b4b7d563957a7fc319bd11b82ba36"
        remote_path: 
          $ref: '#/components/schemas/RemotePath'
  
    RemotePath:
      title: RemotePath
      type: object
      description: "A remote URI and Header information for retrieval"
      example:
        $ref: '#/components/examples/RemotePath/value'
      properties:
        uri:
          type: string
          description: "a web address where a layer maybe fetched"
          example: "https://storage/35c102085707f703de2d9eaad8752d6fe1b8f02b5d2149f1d8357c9cc7fb7d0a"
        headers:
          type: object
          description: "map of arrays of header values key'd by header value. e.g. map[string][]string"
          additionalProperties:
            type: array
            items:
              type: string

    Error:
      title: Error
      type: object
      description: "A general error schema returned when status is not 200 OK"
      properties:
        code:
          type: string
          description: "a code for this particular error"
        message:
          type: string
          description: "a message with further detail"
    State:
      title: State
      type: string
      description: an opaque identifier
      example: deadbeefdeadbeefdeadbeefdeadbeef
