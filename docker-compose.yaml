# if you are using firewalld add this consistent bridge name
# to your trusted zone
# sudo firewall-cmd --zone=trusted --add-interface=clair --permanent
# sudo firewall-cmd --reload
networks:
  default:
    driver_opts:
      com.docker.network.bridge.name: clair

version: "3.7"
services:
  clair-db:
    container_name: clair-db
    image: postgres:12.1
    environment:
      POSTGRES_USER: "clair"
      POSTGRES_DB: "clair"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U clair -d clair"]
      interval: 10s
      timeout: 9s
      retries: 3
      start_period: 10s

  traefik:
    container_name: clair-traefik
    image: traefik:v2.2
    command: 
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.clair.address=:6060"
      - "--providers.docker.exposedbydefault=false"
      - "--accesslog=true"
    ports: 
      - "6060:6060"
      - "7000:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  activemq:
    container_name: clair-activemq
    hostname: clair-activemq
    image: webcenter/activemq:5.14.3
    ports:
      - "8161:8161"
      - "61613:61613"

  rabbitmq:
    container_name: clair-rabbitmq
    hostname: clair-rabbitmq
    image: rabbitmq:3.8.5-management
    ports:
      - "5672:5672"
      - "8087:15672"
    environment:
      RABBITMQ_VM_MEMORY_HIGH_WATERMARK: "85%"
      
  notifier:
    container_name: clair-notifier
    image: quay.io/claircore/golang:1.15.2
    volumes:
      - "./:/src/clair/"
    environment:
      CLAIR_CONF: "/src/clair/local-dev/clair/config.yaml"
      CLAIR_MODE: "notifier"
    command:
      ["bash", "-c", "cd /src/clair/cmd/clair; go run -mod vendor ."]
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.notifier.entrypoints=clair"
      - "traefik.http.routers.notifier.rule=PathPrefix(`/notifier`)"
      - "traefik.http.routers.notifier.service=notifier"
      - "traefik.http.services.notifier.loadbalancer.server.port=6000"

  # this should only be created and deleted via the make target "local-dev-notifier-test"
  notifier-test-mode:
    container_name: clair-notifier
    image: quay.io/claircore/golang:1.15.2
    volumes:
      - "./:/src/clair/"
    environment:
      CLAIR_CONF: "/src/clair/local-dev/clair/config.yaml"
      CLAIR_MODE: "notifier"
      NOTIFIER_TEST_MODE: "true"
    command:
      ["bash", "-c", "cd /src/clair/cmd/clair; go run -mod vendor ."]
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.notifier.entrypoints=clair"
      - "traefik.http.routers.notifier.rule=PathPrefix(`/notifier`)"
      - "traefik.http.routers.notifier.service=notifier"
      - "traefik.http.services.notifier.loadbalancer.server.port=6000"

  indexer:
    container_name: clair-indexer
    image: quay.io/claircore/golang:1.15.2
    volumes:
      - "./:/src/clair/"
    environment:
      CLAIR_CONF: "/src/clair/local-dev/clair/config.yaml"
      CLAIR_MODE: "indexer"
    command:
      ["bash", "-c", "cd /src/clair/cmd/clair; go run -mod vendor ."]
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.indexer.rule=PathPrefix(`/indexer`)"
      - "traefik.http.routers.indexer.entrypoints=clair"
      - "traefik.http.routers.indexer.service=indexer"
      - "traefik.http.services.indexer.loadbalancer.server.port=6000"

  ## like the indexer service above, but mounts quay's http port into local
  ## network namespace.
  ## 
  ## allows layer fetching over localhost
  indexer-quay:
    container_name: clair-indexer
    image: quay.io/claircore/golang:1.15.2
    volumes:
      - "./:/src/clair/"
    environment:
      CLAIR_CONF: "/src/clair/local-dev/clair/config.yaml"
      CLAIR_MODE: "indexer"
    network_mode: "service:quay"
    command:
      ["bash", "-c", "cd /src/clair/cmd/clair; go run -mod vendor ."]
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.indexer.rule=PathPrefix(`/indexer`)"
      - "traefik.http.routers.indexer.entrypoints=clair"
      - "traefik.http.routers.indexer.service=indexer"
      - "traefik.http.services.indexer.loadbalancer.server.port=6000"
    depends_on:
      - quay

  matcher:
    container_name: clair-matcher
    image: quay.io/claircore/golang:1.15.2
    volumes:
      - "./:/src/clair/"
    environment:
      CLAIR_CONF: "/src/clair/local-dev/clair/config.yaml"
      CLAIR_MODE: "matcher"
    command:
      ["bash", "-c", "cd /src/clair/cmd/clair; go run -mod vendor ."]
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.matcher.rule=PathPrefix(`/matcher`)"
      - "traefik.http.routers.matcher.entrypoints=clair"
      - "traefik.http.routers.matcher.service=matcher"
      - "traefik.http.services.matcher.loadbalancer.server.port=6000"

  swagger-ui:
    container_name: clair-swagger
    image: swaggerapi/swagger-ui
    ports:
      - "8082:8080"
    volumes:
      - "./:/clair"
    environment:
      SWAGGER_JSON: "/clair/openapi.yaml"

  jaeger:
    container_name: clair-jaeger
    image: jaegertracing/all-in-one:1.17
    ports:
        - "5775:5775/udp" 
        - "6831:6831/udp" 
        - "6832:6832/udp"
        - "5778:5778"
        - "16686:16686"
        - "14268:14268"
        - "14250:14250"
        - "9411:9411"
    environment:
      COLLECTOR_ZIPKIN_HTTP_PORT: 9411

  prometheus:
    container_name: clair-prometheus
    image: prom/prometheus:latest
    volumes:
      - "./local-dev/prometheus:/etc/prometheus/"
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"

  ## QUAY ##
  redis:
    container_name: clair-redis
    image: redis:latest
    ports:
      - "6379:6379"

  ## quay MUST be bound to port 8080
  quay:
    container_name: clair-quay
    image: quay.io/projectquay/quay:latest
    privileged: true
    volumes:
      - "./local-dev/quay:/conf/stack"
    ports:
      - "8080:8080" 
    environment:
      DEBUGLOG: "true"
      IGNORE_VALIDATION: "true"

  quay-db:
    container_name: quay-db
    image: postgres:12.1
    environment:
      POSTGRES_USER: "quay"
      POSTGRES_DB: "quay"
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U quay -d quay"]
      interval: 10s
      timeout: 9s
      retries: 3
      start_period: 10s

